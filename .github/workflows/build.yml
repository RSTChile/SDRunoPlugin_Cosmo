name: Build

on:
  push:
    branches: [ main, 'copilot/**' ]
  pull_request:
    branches: [ main ]

env:
  PLATFORM: Win32

jobs:
  build:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Detect installed Windows SDK version
      id: detect_sdk
      shell: pwsh
      run: |
        $includeDir = 'C:\Program Files (x86)\Windows Kits\10\Include'
        $versions = @()
        if (Test-Path $includeDir) {
          $versions = Get-ChildItem -Path $includeDir -Directory |
            Where-Object { $_.Name -match '^\d+\.\d+\.\d+\.\d+$' } |
            Select-Object -ExpandProperty Name
        }
        if ($versions.Count -gt 0) {
          $sdk = $versions | Sort-Object {[Version]$_} -Descending | Select-Object -First 1
        } else {
          # Fallback razonable presente en runners recientes
          $sdk = '10.0.22621.0'
        }
        "win_sdk=$sdk" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
        Write-Host "Using Windows SDK: $sdk"

    - name: Verify Nana ZIP exists in repo
      shell: pwsh
      run: |
        if (!(Test-Path 'nana/build/bin/nana_v141_Release_x86.zip')) {
          Write-Error 'nana/build/bin/nana_v141_Release_x86.zip not found'
          exit 1
        }
        Get-ChildItem -Path 'nana/build/bin' -Recurse

    - name: Extract Nana library (PowerShell)
      shell: pwsh
      run: |
        Expand-Archive -Path 'nana/build/bin/nana_v141_Release_x86.zip' -DestinationPath 'nana/build/bin' -Force
        Write-Host 'After extraction:'
        Get-ChildItem -Path 'nana/build/bin' -Filter *.lib

    # Opcional: normalizar nombre del .lib si fuese distinto
    #- name: Normalize Nana lib path
    #  shell: pwsh
    #  run: |
    #    $lib = Get-ChildItem -Path 'nana' -Filter 'nana*.lib' -Recurse | Select-Object -First 1
    #    if (-not $lib) { throw "Nana .lib not found after extraction." }
    #    New-Item -ItemType Directory -Force -Path 'nana/build/bin' | Out-Null
    #    Copy-Item $lib.FullName 'nana/build/bin/nana_v141_Release_x86.lib' -Force
    #    Write-Host "Using Nana lib at: nana/build/bin/nana_v141_Release_x86.lib"

    - name: Build project
      shell: cmd
      run: |
        msbuild SDRunoPlugin_Template.vcxproj ^
          /p:Configuration=Release ^
          /p:Platform=${{ env.PLATFORM }} ^
          /p:PlatformToolset=v143 ^
          /p:WindowsTargetPlatformVersion=${{ steps.detect_sdk.outputs.win_sdk }} ^
          /p:AdditionalIncludeDirectories="include;nana\include" ^
          /p:AdditionalDependencies="nana\build\bin\nana_v141_Release_x86.lib;%(AdditionalDependencies)"

    - name: Package artifacts
      shell: cmd
      run: |
        mkdir artifacts
        copy Release\Cosmo.dll artifacts\ 2>nul || copy ${{ env.PLATFORM }}\Release\Cosmo.dll artifacts\ 2>nul || echo "DLL not found in expected location"
        7z a artifacts\Cosmo-${{ github.sha }}.zip Release\*.dll 2>nul || 7z a artifacts\Cosmo-${{ github.sha }}.zip ${{ env.PLATFORM }}\Release\*.dll 2>nul || echo "No DLLs to package"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Cosmo-build-${{ github.sha }}
        path: artifacts/
